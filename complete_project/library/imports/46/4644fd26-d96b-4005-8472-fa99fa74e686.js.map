{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Pilot.js"],"names":["cc","Class","extends","Component","properties","pickRadius","speed","onPicked","audioEngine","playEffect","game","boomAudio","node","destroy","stone","onLoad","runAction","repeatForever","rotateBy","update","dt","i","childrenCount","children","stonePos","getPosition","dist","position","sub","mag","y","height","gainScore"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,EAFJ;AAGRC,eAAO;AAHC,KAHP;;AASLC,YATK,sBASM;AACPP,WAAGQ,WAAH,CAAeC,UAAf,CAA0B,KAAKC,IAAL,CAAUC,SAApC,EAA+C,KAA/C;AACA,aAAKC,IAAL,CAAUC,OAAV;AACA,aAAKC,KAAL,CAAWD,OAAX;AACH,KAbI;AAeLE,UAfK,oBAeI;AACL,aAAKH,IAAL,CAAUI,SAAV,CAAoBhB,GAAGiB,aAAH,CAAiBjB,GAAGkB,QAAH,CAAY,GAAZ,EAAgB,GAAhB,CAAjB,CAApB,EADK,CACwD;AAC7D,aAAKZ,KAAL,GAAa,EAAb;AACH,KAlBI;AAoBLa,UApBK,kBAoBEC,EApBF,EAoBM;AACP,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAI,KAAKX,IAAL,CAAUE,IAAV,CAAeU,aAAjC,EAAgDD,GAAhD,EAAoD;AAChD,gBAAG,KAAKX,IAAL,CAAUE,IAAV,CAAeW,QAAf,CAAwBF,CAAxB,EAA2B,OAA3B,KAAuC,OAA1C,EAAkD;AAC9C;AACH;AACD,iBAAKP,KAAL,GAAa,KAAKJ,IAAL,CAAUE,IAAV,CAAeW,QAAf,CAAwBF,CAAxB,CAAb;AACA,gBAAIG,WAAW,KAAKV,KAAL,CAAWW,WAAX,EAAf;AACA;AACA,gBAAIC,OAAO,KAAKd,IAAL,CAAUe,QAAV,CAAmBC,GAAnB,CAAuBJ,QAAvB,EAAiCK,GAAjC,EAAX;AACA;AACA,gBAAIH,OAAO,KAAKrB,UAAhB,EAA4B;AACxB;AACA,qBAAKE,QAAL;AACA;AACH;AACD,iBAAKK,IAAL,CAAUkB,CAAV,IAAe,KAAKxB,KAAL,GAAac,EAA5B;AACA,gBAAI,KAAKR,IAAL,CAAUkB,CAAV,IAAe,KAAKpB,IAAL,CAAUE,IAAV,CAAemB,MAAf,GAAwB,CAAxB,GAA4B,EAA/C,EAAkD;AAC9C,qBAAKzB,KAAL,GAAa,EAAb;AACH;AACD,gBAAI,KAAKM,IAAL,CAAUkB,CAAV,IAAe,KAAKpB,IAAL,CAAUE,IAAV,CAAemB,MAAf,GAAwB,CAA3C,EAA8C;AAC1C,qBAAKrB,IAAL,CAAUsB,SAAV;AACA,qBAAKpB,IAAL,CAAUC,OAAV;AACA;AACH;AACJ;AACJ;AA7CI,CAAT","file":"Pilot.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n    \n    properties: {\n        // 宇航员和石头之间的距离小于这个数值时，就会碰撞\n        pickRadius: 30,\n        speed: 60,\n    },\n\n    onPicked() {\n        cc.audioEngine.playEffect(this.game.boomAudio, false);\n        this.node.destroy();\n        this.stone.destroy();\n    },\n\n    onLoad() {\n        this.node.runAction(cc.repeatForever(cc.rotateBy(0.1,180))); // 旋转当前节点（旋转指定角度用rotateBy）\n        this.speed = 30;\n    },\n\n    update(dt) {       \n        for (let i=0; i < this.game.node.childrenCount; i++){\n            if(this.game.node.children[i]['_name'] != 'stone'){\n                continue;\n            }\n            this.stone = this.game.node.children[i];\n            var stonePos = this.stone.getPosition();\n            // 根据两点位置计算两点之间距离\n            var dist = this.node.position.sub(stonePos).mag();\n            // 每帧判断和宇航员之间的距离是否小于收集距离\n            if (dist < this.pickRadius) {\n                // 调用收集行为\n                this.onPicked();\n                return;\n            }\n            this.node.y += this.speed * dt;\n            if (this.node.y >= this.game.node.height / 2 - 30){\n                this.speed = 10;\n            } \n            if (this.node.y >= this.game.node.height / 2) {\n                this.game.gainScore();\n                this.node.destroy();\n                return;\n            }\n        }\n    }, \n});\n"]}