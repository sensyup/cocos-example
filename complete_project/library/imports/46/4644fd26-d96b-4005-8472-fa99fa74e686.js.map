{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","speed","getWallDistance","dist","onPicked","game","gainScore","node","destroy","stone","update","dt","i","childrenCount","children","stonePos","getPosition","console","log","position","sub","mag","y","height"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,EAFJ;AAGRC,eAAO;AAHC,KAHP;;AASLC,qBAAiB,2BAAY;AACzB;AACA;;AAEA,eAAOC,IAAP;AACH,KAdI;;AAgBLC,cAAU,oBAAW;AACjB;AACA;AACA;AACA,aAAKC,IAAL,CAAUC,SAAV;AACA;AACA,aAAKC,IAAL,CAAUC,OAAV;AACA,aAAKC,KAAL,CAAWD,OAAX;AACH,KAxBI;;AA0BLE,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,aAAK,IAAIC,IAAE,CAAX,EAAcA,IAAI,KAAKP,IAAL,CAAUE,IAAV,CAAeM,aAAjC,EAAgDD,GAAhD,EAAoD;AAChD,gBAAG,KAAKP,IAAL,CAAUE,IAAV,CAAeO,QAAf,CAAwBF,CAAxB,EAA2B,OAA3B,KAAuC,OAA1C,EAAkD;AAC9C;AACH;AACD,iBAAKH,KAAL,GAAa,KAAKJ,IAAL,CAAUE,IAAV,CAAeO,QAAf,CAAwBF,CAAxB,CAAb;AACA,gBAAIG,WAAW,KAAKN,KAAL,CAAWO,WAAX,EAAf;AACAC,oBAAQC,GAAR,CAAYH,QAAZ;AACA;AACA;AACA,gBAAIZ,OAAO,KAAKI,IAAL,CAAUY,QAAV,CAAmBC,GAAnB,CAAuBL,QAAvB,EAAiCM,GAAjC,EAAX;AACJ;AACI,gBAAIlB,OAAO,KAAKH,UAAhB,EAA4B;AACxBiB,wBAAQC,GAAR,CAAY,eAAZ;AACA;AACA,qBAAKd,QAAL;AACA;AACH;AACD,iBAAKG,IAAL,CAAUe,CAAV,IAAe,KAAKrB,KAAL,GAAaU,EAA5B;AACA,gBAAI,KAAKJ,IAAL,CAAUe,CAAV,GAAc,KAAKjB,IAAL,CAAUE,IAAV,CAAegB,MAAf,GAAwB,CAA1C,EAA6C;AACzC,qBAAKhB,IAAL,CAAUC,OAAV;AACH;AACJ;AACJ;AAlDI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    \r\n    properties: {\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius: 30,\r\n        speed: 80,\r\n    },\r\n\r\n    getWallDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        // console.log(this.game.node);\r\n        \r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        // this.game.spawnNewStar();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n        this.stone.destroy();\r\n    },\r\n\r\n    update: function (dt) {\r\n        //let dist = this.getWallDistance();        \r\n        for (let i=0; i < this.game.node.childrenCount; i++){\r\n            if(this.game.node.children[i]['_name'] != 'stone'){\r\n                continue\r\n            }\r\n            this.stone = this.game.node.children[i];\r\n            var stonePos = this.stone.getPosition();\r\n            console.log(stonePos)\r\n            // console.log(this.node.position);\r\n            // 根据两点位置计算两点之间距离\r\n            var dist = this.node.position.sub(stonePos).mag();\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n            if (dist < this.pickRadius) {\r\n                console.log('-------------');\r\n                // 调用收集行为\r\n                this.onPicked();\r\n                return;\r\n            }\r\n            this.node.y += this.speed * dt;\r\n            if (this.node.y > this.game.node.height / 2) {\r\n                this.node.destroy();\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}